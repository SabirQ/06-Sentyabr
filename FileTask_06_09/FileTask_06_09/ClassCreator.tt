<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO"#>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ import namespace="Microsoft.SqlServer.Management.Smo" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ assembly name="Microsoft.SqlServer.ConnectionInfo" #>
<#@ assembly name="Microsoft.SqlServer.Smo" #>
<#@ import namespace="Microsoft.SqlServer.Management.Smo" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.ComponentModel" #>
<#@ import namespace="System.Diagnostics.CodeAnalysis" #>
<#@ assembly name="System.Globalization" #>
<#@ import namespace="System.Runtime.Serialization" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Xml.Schema" #>
<#@ import namespace="System.Xml.Serialization" #>
<#@ import namespace="System.ComponentModel" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>




 <#  const string connection = "server=localhost;database=Northwind;trusted_connection=true;";
SqlConnection con = new SqlConnection(connection);
List<string> result = new List<string>();
SqlCommand cmd = new SqlCommand("SELECT name FROM sys.Tables", con);
if (con.State == System.Data.ConnectionState.Closed)
    con.Open();
SqlDataReader dr = cmd.ExecuteReader();
while (dr.Read())
{
    result.Add(dr["name"].ToString());
}

dr.Close();
foreach (var value in result)
{
    cmd = new SqlCommand($"select * from {value}", con);
    dr = cmd.ExecuteReader(CommandBehavior.KeyInfo);
    dr.Read();

    DataTable dt = dr.GetSchemaTable();
   

    string className = string.Empty;
    if (value.EndsWith("ies"))
    {
        className = value.Substring(0, value.Length - 3) + "y";
    }
    else if (value.EndsWith("s"))
    {
        className = value.Substring(0, value.Length - 1);
    }
    else
    {
        className = value;
    }
    List<string> str = new List<string>()
    {
        "using System;","using System.Collections.Generic;","using System.Linq;","using System.Text;" ," using System.Threading.Tasks;","namespace FileTask_06_09.Models\n{",$"internal class {className}\n","{"
    };
   
    foreach (DataRow row in dt.Rows)
    { 
        str.Add($"public {row[12].ToString().Substring(7, row[12].ToString().Length-7)} {row[0]}" + " { get; set; }");
    }
    var path = @$"C:\Users\sabir\OneDrive\Рабочий стол\PYP all tasks\06.09\FileTask_06_09\FileTask_06_09\Models\{className}.cs";
    str.Add("}\n}");
    File.WriteAllLines(path, str);
    dr.Close();
}

con.Close(); #>

